
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user authentication and roles
    function isSignedIn() {
      return request.auth != null;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isAdmin() {
      let userRole = getUserData(request.auth.uid).role;
      return isSignedIn() && (userRole == 'manager' || userRole == 'designer');
    }

    // Rules for products, categories, and themes: Public read, admin write.
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /themes/{themeId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Rules for user profiles
    match /users/{userId} {
      // Users can be created by anyone signed in (e.g., during sign up)
      allow create: if isSignedIn();
      // Users can read/update their own profile. Admins can also read/update any profile.
      allow read, update: if request.auth.uid == userId || isAdmin();
      // Only admins can delete user profiles
      allow delete: if isAdmin();
    }
  }
}
